CREATE TABLE restaurant2 (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    address VARCHAR,
    category VARCHAR
);

CREATE TABLE reviewer (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    email VARCHAR,
    karma NUMERIC DEFAULT 0 CHECK(karma >= 0 AND karma <= 7)
);

CREATE TABLE review (
    id SERIAL PRIMARY KEY,
    reviewer_id INTEGER REFERENCES reviewer (id),  --foreign key
    stars INTEGER NOT NULL CHECK(stars >= 1 AND stars <= 5),
    title VARCHAR,
    review VARCHAR,
    restaurant_id INTEGER REFERENCES restaurant2 (id)
);

4. SELECT R.REVIEW, RR.NAME FROM REVIEW R 
JOIN RESTAURNT2 RR 
ON R.RESTAURANT_ID = RR.ID;

5. SELECT AVG(R.STARS), RR.NAME FROM REVIEW R 
JOIN RESTAURANT2 RR ON R.RESTAURANT_ID = RR.ID
GROUP BY RR.NAME;

6. SELECT COUNT(R.REVIEW), AVG(R.STARS), RR.NAME FROM REVIEW R 
JOIN RESTAURANT2 RR ON RR.ID = R.RESTAURANT_ID
GROUP BY RR.NAME;

7. SELECT RR.NAME, R.REVIEW, RRR.NAME FROM REVIEW R
JOIN RESTAURANT2 RR ON R.RESTAURANT_ID = RR.ID
JOIN REVIEWER RRR ON RRR.ID = R.REVIEWER_ID;

8. SELECT AVG(R.STARS), RRR.NAME FROM REVIEW R 
JOIN REVIEWER RRR ON RRR.ID = R.REVIEWER_ID
GROUP BY RRR.NAME;

9. SELECT MIN(R.STARS) AS LOWEST, RRR.NAME FROM REVIEW R 
JOIN REVIEWER RRR ON RRR.ID = R.REVIEWER_ID
GROUP BY RRR.NAME;

10. SELECT COUNT(RR.CATEGORY) AS COUNT, RR.CATEGORY FROM RESTAURANT2 RR
GROUP BY RR.CATEGORY;

11. SELECT COUNT(R.STARS), RR.NAME FROM REVIEW R 
JOIN RESTAURANT2 RR ON RR.ID = R.RESTAURANT_ID
WHERE STARS = 5
GROUP BY RR.NAME;

12. SELECT AVG(R.STARS) AS AVERAGE, RR.CATEGORY FROM REVIEW R 
JOIN RESTAURANT2 RR ON RR.ID = R.RESTAURANT_ID
GROUP BY RR.CATEGORY;

